(function() {var type_impls = {
"lib":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SsoString\" class=\"impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#667-972\">source</a><a href=\"#impl-SsoString\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#668-672\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_short\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#675-679\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.is_short\" class=\"fn\">is_short</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this string is a short string (no heap allocations), and <code>false</code> otherwise</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_long\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#682-684\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.is_long\" class=\"fn\">is_long</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>!self.is_short()</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tagged\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#688-694\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.tagged\" class=\"fn\">tagged</a>(&amp;self) -&gt; <a class=\"enum\" href=\"lib/enum.TaggedSsoString64.html\" title=\"enum lib::TaggedSsoString64\">TaggedSsoString64</a>&lt;'_&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the underlying union as an enum, allowing you to access the underlying short or\nlong variant for the string</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tagged_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#697-703\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.tagged_mut\" class=\"fn\">tagged_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"lib/enum.TaggedSsoString64Mut.html\" title=\"enum lib::TaggedSsoString64Mut\">TaggedSsoString64Mut</a>&lt;'_&gt;</h4></section></summary><div class=\"docblock\"><p>Same as <a href=\"lib/union.SsoString.html#method.tagged\" title=\"method lib::SsoString::tagged\"><code>SsoString::tagged</code></a>, but returns allows mutation of the underlying values instead</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#705-708\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a slice of bytes of this string’s contents</p>\n</div></details><section id=\"method.as_mut_str\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#710-712\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.as_mut_str\" class=\"fn\">as_mut_str</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section><section id=\"method.as_mut_vec\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#714\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"lib/union.SsoString.html#tymethod.as_mut_vec\" class=\"fn\">as_mut_vec</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section><section id=\"method.as_str\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#716-718\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.as_str\" class=\"fn\">as_str</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#720-722\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#724-729\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#731-735\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, _range: R) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.Drain.html\" title=\"struct alloc::string::Drain\">Drain</a>&lt;'_&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_from_within\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#737-741\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.extend_from_within\" class=\"fn\">extend_from_within</a>&lt;R&gt;(&amp;mut self, _src: R)<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_parts\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#756-763\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"lib/union.SsoString.html#tymethod.from_raw_parts\" class=\"fn\">from_raw_parts</a>(\n    buf: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>,\n    length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>SsoString::Long</code> from a length, capacity and pointer. This method only\nexists to match <code>std::string::String</code>’s method of the same signature and name. It will\nalways create a long string, which is probably what you want if you are using this method.</p>\n<h5 id=\"safety-from-stdstringstring\"><a href=\"#safety-from-stdstringstring\">Safety (from <code>std::string::String</code>)</a></h5>\n<p>This is highly unsafe, due to the numer of invariants that aren’t checked:</p>\n<ul>\n<li>The memory at buf needs to have been previously allocated by the same allocator the\nstandard library uses, with a required alignment of exactly 1.</li>\n<li><code>length</code> needs to be less than or equal to capacity.</li>\n<li><code>capacity</code> needs to be the correct value.</li>\n<li>The first length bytes at buf need to be valid UTF-8.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_utf16\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#765\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.from_utf16\" class=\"fn\">from_utf16</a>(_v: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.FromUtf16Error.html\" title=\"struct alloc::string::FromUtf16Error\">FromUtf16Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_utf16_lossy\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#767\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.from_utf16_lossy\" class=\"fn\">from_utf16_lossy</a>(_v: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>]) -&gt; <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_utf8\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#769\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.from_utf8\" class=\"fn\">from_utf8</a>(_v: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"type\" href=\"lib/type.String.html\" title=\"type lib::String\">String</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.FromUtf8Error.html\" title=\"struct alloc::string::FromUtf8Error\">FromUtf8Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_utf8_lossy\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#771\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.from_utf8_lossy\" class=\"fn\">from_utf8_lossy</a>(_v: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"struct\" href=\"lib/struct.SsoStr.html\" title=\"struct lib::SsoStr\">SsoStr</a>&gt;</h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_utf8_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#773\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"lib/union.SsoString.html#tymethod.from_utf8_unchecked\" class=\"fn\">from_utf8_unchecked</a>(_v: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#775\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, _idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, _c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)</h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_str\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#777\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.insert_str\" class=\"fn\">insert_str</a>(&amp;mut self, _idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, _s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)</h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_str\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#779\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.into_boxed_str\" class=\"fn\">into_boxed_str</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leak\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#781\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.leak\" class=\"fn\">leak</a>&lt;'a&gt;(&amp;self) -&gt; &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#783-785\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#787-789\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, ch: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_str\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#792-810\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.push_str\" class=\"fn\">push_str</a>(&amp;mut self, s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)</h4></section></summary><div class=\"docblock\"><p>Push a str <code>s</code> onto the end of this string</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#812\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.remove\" class=\"fn\">remove</a>(&amp;mut self, _idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a></h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_range\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#814-818\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.replace_range\" class=\"fn\">replace_range</a>&lt;R&gt;(&amp;mut self, _range: R, _replace_with: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><section id=\"method.reserve\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#820-830\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section><section id=\"method.set_len\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#832-834\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"lib/union.SsoString.html#tymethod.set_len\" class=\"fn\">set_len</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#836-847\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#851-863\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.reserve_exact\" class=\"fn\">reserve_exact</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>This doesn’t actually reserve exactly <code>additional</code> extra bytes, it might allocate a few\nextra, just because of the implementation of <code>Global</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#873-897\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.retain\" class=\"fn\">retain</a>&lt;F&gt;(&amp;mut self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Retains only the characters specified by the predicate.</p>\n<h5 id=\"todo\"><a href=\"#todo\">TODO</a></h5>\n<p>This is a bad implementation of a simple function, it creates an entirely new string, it\ndoesn’t require <code>&amp;mut</code>. The better version would be easier to implement with <code>as_mut_str</code>.</p>\n<p>I don’t think I’m going to bother with this any time soon.</p>\n</div></details><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#899-909\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section><section id=\"method.shrink_to\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#911-952\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.shrink_to\" class=\"fn\">shrink_to</a>(&amp;mut self, min_capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#959-961\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>This is currently just an alias for <code>self.shrink_to(self.len())</code>, it doesn’t avoid any\nbranches just because it’s always valid</p>\n<h5 id=\"todo-1\"><a href=\"#todo-1\">TODO</a></h5>\n<p>Implement this better</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_off\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#963\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.split_off\" class=\"fn\">split_off</a>(&amp;mut self, _at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"type\" href=\"lib/type.String.html\" title=\"type lib::String\">String</a></h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#965\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, _new_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#967\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.try_reserve\" class=\"fn\">try_reserve</a>(&amp;mut self, _additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/collections/struct.TryReserveError.html\" title=\"struct alloc::collections::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#969-971\">source</a><h4 class=\"code-header\">pub fn <a href=\"lib/union.SsoString.html#tymethod.try_reserve_exact\" class=\"fn\">try_reserve_exact</a>(\n    &amp;mut self,\n    _additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/collections/struct.TryReserveError.html\" title=\"struct alloc::collections::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>A method with the same name exists on <a href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>std::string::String</code></a>, but it is not yet \nimplemented for <a href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\"><code>SsoString</code></a>. This function will panic on call.</p>\n</div></details></div></details>",0,"lib::String"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CSsoStr%3E-for-SsoString\" class=\"impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#1033-1038\">source</a><a href=\"#impl-Borrow%3CSsoStr%3E-for-SsoString\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"struct\" href=\"lib/struct.SsoStr.html\" title=\"struct lib::SsoStr\">SsoStr</a>&gt; for <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#1034-1037\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"type\" href=\"lib/type.Str.html\" title=\"type lib::Str\">Str</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<SsoStr>","lib::String"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26str%3E-for-SsoString\" class=\"impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#1018-1022\">source</a><a href=\"#impl-AddAssign%3C%26str%3E-for-SsoString\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#1019-1021\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&str>","lib::String"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26str%3E-for-SsoString\" class=\"impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#1024-1031\">source</a><a href=\"#impl-Add%3C%26str%3E-for-SsoString\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#1027-1030\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&str>","lib::String"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-SsoString\" class=\"impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#974-978\">source</a><a href=\"#impl-PartialEq-for-SsoString\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#975-977\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","lib::String"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cstr%3E-for-SsoString\" class=\"impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#980-984\">source</a><a href=\"#impl-PartialEq%3Cstr%3E-for-SsoString\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#981-983\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<str>","lib::String"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-SsoString\" class=\"impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#635-644\">source</a><a href=\"#impl-Drop-for-SsoString\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#636-643\">source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","lib::String"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26str%3E-for-SsoString\" class=\"impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#646-652\">source</a><a href=\"#impl-From%3C%26str%3E-for-SsoString\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#647-651\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a str>","lib::String"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-SsoString\" class=\"impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#1009-1016\">source</a><a href=\"#impl-Debug-for-SsoString\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#1010-1015\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","lib::String"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-SsoString\" class=\"impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#992-998\">source</a><a href=\"#impl-Deref-for-SsoString\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#995-997\">source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","lib::String"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-SsoString\" class=\"impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#1000-1007\">source</a><a href=\"#impl-Display-for-SsoString\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"union\" href=\"lib/union.SsoString.html\" title=\"union lib::SsoString\">SsoString</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lib/lib.rs.html#1001-1006\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","lib::String"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()